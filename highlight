#!/bin/bash
# Author: Roger Tu
# Date: 2012-08-15

# NOTE: not a good idea to do searches consisting of single digit numbers

trap reset_highlight_colors SIGINT
function reset_highlight_colors
{
    echo -e "\033[0m"
}

function print_help
{
    echo "Usage: highlight [-x] <color_flag> <search_string> [. . .]
        Normal color flags:
            -k normal black
            -r normal red
            -g normal green
            -y normal yellow
            -b normal blue
            -p normal purple
            -c normal cyan
            -w normal white
        Bold color flags:
            -K bold black
            -R bold red
            -G bold green
            -Y bold yellow
            -B bold blue
            -P bold purple
            -C bold cyan
            -W bold white
        Other colors flags (Must have 256-color terminal enabled):
            -o normal orange
            -O bold orange
        Optional modifiers:
            -i inverse mode
            -x do not reset formatting at end of line"

    exit 1
}

function print_error
{
    echo "Error: -$OPTARG requires a search string" >&2
    exit 1
}

if [ $# -eq 0 ]
then
    print_help
fi

REPLACEMENT_PREFIX='s/'
REPLACEMENT_DELIMITER='/'
REPLACEMENT_POSTFIX='/g;'

FULL_REPLACEMENT_STRING=''

while getopts ':ixk:K:r:R:g:G:y:Y:b:B:p:P:c:C:w:W:o:O:' COLOR
do
    SEARCH_STRING=''
    COLOR_STRING='$&'

    BLEED_JUST_SET=""
    INVERSE_JUST_SET=""

    case ${COLOR} in
        x)
            BLEED_MODE=0
            BLEED_JUST_SET=0
            ;;
        i)
            INVERSE_MODE=0
            INVERSE_JUST_SET=0
            ;;
        k)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[0;30m$&\e[0m"
            ;;
        K)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[1;30m$&\e[0m"
            ;;
        r)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[0;31m$&\e[0m"
            ;;
        R)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[1;31m$&\e[0m"
            ;;
        g)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[0;32m$&\e[0m"
            ;;
        G)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[1;32m$&\e[0m"
            ;;
        y)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[0;33m$&\e[0m"
            ;;
        Y)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[1;33m$&\e[0m"
            ;;
        b)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[0;34m$&\e[0m"
            ;;
        B)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[1;34m$&\e[0m"
            ;;
        p)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[0;35m$&\e[0m"
            ;;
        P)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[1;35m$&\e[0m"
            ;;
        c)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[0;36m$&\e[0m"
            ;;
        C)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[1;36m$&\e[0m"
            ;;
        w)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[0;37m$&\e[0m"
            ;;
        W)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[1;37m$&\e[0m"
            ;;
        o)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[0;38;5;202m$&\e[0m"
            ;;
        O)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="\e[1;38;5;202m$&\e[0m"
            ;;
        \?)
            print_help
            ;;
        :)
            print_error
            ;;
    esac

    if [ -z "${BLEED_JUST_SET}" -o -z "${INVERSE_JUST_SET}" ]
    then
        # Build up the whole replacement string
        FULL_REPLACEMENT_STRING=${FULL_REPLACEMENT_STRING}${REPLACEMENT_PREFIX}${SEARCH_STRING}${REPLACEMENT_DELIMITER}${COLOR_STRING}${REPLACEMENT_POSTFIX}
    fi
done
shift $(($OPTIND-1))

if [ $# -gt 0 ];
then
    echo 'this is happening?'
    print_help
fi

if [ -n "${BLEED_MODE}" ]
then
    FULL_REPLACEMENT_STRING=$(echo "${FULL_REPLACEMENT_STRING}" | perl -pe 's/\\e\[0m//g')
fi
if [ -n "${INVERSE_MODE}" ]
then
    FULL_REPLACEMENT_STRING=$(echo "${FULL_REPLACEMENT_STRING}" | perl -pe 's/\\e\[[01];/\\e\[7;/g')
fi

perl -pe "${FULL_REPLACEMENT_STRING}"
reset_highlight_colors

