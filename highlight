#!/bin/bash
# Author: Roger Tu
# Date: 2012-08-15

# NOTE: Not a good idea to do searches consisting of single digit numbers

export BOLD_FONT=`tput bold`
export RESET_ALL=`tput sgr0`
export REVERSE_ON=`tput smso`
export REVERSE_OFF=`tput rmso`

export FOREGROUND_BLACK=`tput setaf 0`
export FOREGROUND_RED=`tput setaf 1`
export FOREGROUND_GREEN=`tput setaf 2`
export FOREGROUND_YELLOW=`tput setaf 3`
export FOREGROUND_BLUE=`tput setaf 4`
export FOREGROUND_PURPLE=`tput setaf 5`
export FOREGROUND_CYAN=`tput setaf 6`
export FOREGROUND_WHITE=`tput setaf 7`
export FOREGROUND_ORANGE=`tput setaf 202`

trap reset_highlight_colors SIGINT
function reset_highlight_colors
{
    tput sgr0
}

function print_help
{
    echo "Usage: highlight [-x] <color_flag> <search_string> [. . .]
        Normal color flags:
            -k normal black
            -r normal red
            -g normal green
            -y normal yellow
            -b normal blue
            -p normal purple
            -c normal cyan
            -w normal white
        Bold color flags:
            -K bold black
            -R bold red
            -G bold green
            -Y bold yellow
            -B bold blue
            -P bold purple
            -C bold cyan
            -W bold white
        Other colors flags (Must have 256-color terminal enabled):
            -o normal orange
            -O bold orange
        Optional modifiers:
            -i inverse mode
            -x do not reset formatting at end of line"

    exit 1
}

function print_error
{
    echo "Error: -${OPTARG} requires a search string" >&2
    exit 1
}

if [ $# -eq 0 ]
then
    print_help
fi

REPLACEMENT_PREFIX='s/'
REPLACEMENT_DELIMITER='/'
REPLACEMENT_POSTFIX='/g;'

FULL_REPLACEMENT_STRING=''

BLEED_MODE=0
INVERSE_MODE=0

while getopts ':ixk:K:r:R:g:G:y:Y:b:B:p:P:c:C:w:W:o:O:' COLOR
do
    SEARCH_STRING=''
    COLOR_STRING='$&'

    BLEED_JUST_SET=0
    INVERSE_JUST_SET=0

    case ${COLOR} in
        x)
            BLEED_JUST_SET=1
            ;;
        i)
            INVERSE_JUST_SET=1
            ;;
        k)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${FOREGROUND_BLACK}$&"
            ;;
        K)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${BOLD_FONT}${FOREGROUND_BLACK}$&"
            ;;
        r)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${FOREGROUND_RED}$&"
            ;;
        R)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${BOLD_FONT}${FOREGROUND_RED}$&"
            ;;
        g)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${FOREGROUND_GREEN}$&"
            ;;
        G)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${BOLD_FONT}${FOREGROUND_GREEN}$&"
            ;;
        y)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${FOREGROUND_YELLOW}$&"
            ;;
        Y)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${BOLD_FONT}${FOREGROUND_YELLOW}$&"
            ;;
        b)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${FOREGROUND_BLUE}$&"
            ;;
        B)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${BOLD_FONT}${FOREGROUND_BLUE}$&"
            ;;
        p)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${FOREGROUND_PURPLE}$&"
            ;;
        P)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${BOLD_FONT}${FOREGROUND_PURPLE}$&"
            ;;
        c)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${FOREGROUND_CYAN}$&"
            ;;
        C)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${BOLD_FONT}${FOREGROUND_CYAN}$&"
            ;;
        w)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${FOREGROUND_WHITE}$&"
            ;;
        W)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${BOLD_FONT}${FOREGROUND_WHITE}$&"
            ;;
        o)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${FOREGROUND_ORANGE}$&"
            ;;
        O)
            SEARCH_STRING=${OPTARG}
            COLOR_STRING="${BOLD_FONT}${FOREGROUND_ORANGE}$&"
            ;;
        \?)
            print_help
            ;;
        :)
            print_error
            ;;
    esac

    if [ ${BLEED_JUST_SET} -eq 1 ]
    then
        # Toggle BLEED_MODE
        if [ ${BLEED_MODE} -eq 0 ]
        then
            BLEED_MODE=1
        else
            BLEED_MODE=0
        fi
    fi

    if [ ${INVERSE_JUST_SET} -eq 1 ]
    then
        # Toggle INVERSE_MODE
        if [ ${INVERSE_MODE} -eq 0 ]
        then
            INVERSE_MODE=1
        else
            INVERSE_MODE=0
        fi
    fi

    # Begin building the full replacement string
    if [ ${INVERSE_MODE} -eq 0 ]
    then
        #FULL_REPLACEMENT_STRING=${FULL_REPLACEMENT_STRING}${REVERSE_OFF}
        FULL_REPLACEMENT_STRING=${FULL_REPLACEMENT_STRING}
    fi
    if [ ${INVERSE_MODE} -eq 1 ]
    then
        #FULL_REPLACEMENT_STRING=${FULL_REPLACEMENT_STRING}${REVERSE_ON}
        FULL_REPLACEMENT_STRING=${FULL_REPLACEMENT_STRING}
    fi

    # If we did not just change bleed or inverse modes, then actually replace some strings
    if [ ${BLEED_JUST_SET} -eq 0 -a ${INVERSE_JUST_SET} -eq 0 ]
    then
        FULL_REPLACEMENT_STRING=${FULL_REPLACEMENT_STRING}${REPLACEMENT_PREFIX}${SEARCH_STRING}${REPLACEMENT_DELIMITER}${COLOR_STRING}
    fi

    # If we are not bleeding colors, then reset the color back to normal
    if [ ${BLEED_MODE} -eq 0 ]
    then
        FULL_REPLACEMENT_STRING=${FULL_REPLACEMENT_STRING}${RESET_ALL}
    fi

    # If we did not just change bleed or inverse modes, then actually replace some strings
    if [ ${BLEED_JUST_SET} -eq 0 -a ${INVERSE_JUST_SET} -eq 0 ]
    then
        FULL_REPLACEMENT_STRING=${FULL_REPLACEMENT_STRING}${REPLACEMENT_POSTFIX}
    fi

done
shift $(($OPTIND-1))

if [ $# -gt 0 ];
then
    echo 'this is happening?'
    print_help
fi

perl -pe "${FULL_REPLACEMENT_STRING}"
reset_highlight_colors

